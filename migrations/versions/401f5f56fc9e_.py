"""empty message

Revision ID: 401f5f56fc9e
Revises: 
Create Date: 2020-10-29 10:45:05.878372

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '401f5f56fc9e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('User',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.Unicode(length=128), nullable=False),
    sa.Column('password', sa.Unicode(length=128), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('authenticated', sa.Boolean(), nullable=True),
    sa.Column('type', sa.Unicode(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('Authority',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=128), nullable=True),
    sa.Column('city', sa.Unicode(length=128), nullable=True),
    sa.Column('address', sa.Unicode(length=128), nullable=True),
    sa.Column('phone', sa.Unicode(length=128), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstname', sa.Unicode(length=128), nullable=True),
    sa.Column('lastname', sa.Unicode(length=128), nullable=True),
    sa.Column('birthday', sa.DateTime(), nullable=True),
    sa.Column('health_status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Operator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Restaurant',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('phone', sa.String(length=25), nullable=True),
    sa.Column('menu_type', sa.String(length=100), nullable=True),
    sa.Column('is_open', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['Operator.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Like',
    sa.Column('liker_id', sa.Integer(), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['liker_id'], ['Customer.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['restaurant_id'], ['Restaurant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('liker_id', 'restaurant_id')
    )
    op.create_table('RestaurantAvailability',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('restaurant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['Restaurant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('RestaurantRating',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.SmallInteger(), nullable=True),
    sa.Column('review', sa.Text(length=200), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['Customer.id'], ),
    sa.ForeignKeyConstraint(['restaurant_id'], ['Restaurant.id'], ),
    sa.PrimaryKeyConstraint('customer_id', 'restaurant_id')
    )
    op.create_table('Table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['Restaurant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Reservation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('table_id', sa.Integer(), nullable=True),
    sa.Column('restaurant_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['Restaurant.id'], ),
    sa.ForeignKeyConstraint(['table_id'], ['Table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Reservation')
    op.drop_table('Table')
    op.drop_table('RestaurantRating')
    op.drop_table('RestaurantAvailability')
    op.drop_table('Like')
    op.drop_table('Restaurant')
    op.drop_table('Operator')
    op.drop_table('Customer')
    op.drop_table('Authority')
    op.drop_table('User')
    # ### end Alembic commands ###
